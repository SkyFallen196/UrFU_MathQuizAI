import streamlit as st
from dotenv import load_dotenv
import os

from RAG import get_response

load_dotenv(".env")

st.set_page_config(
    page_title="MathQuizGenerator",
    page_icon="üèõ",
    layout="centered"
)

if "mode" not in st.session_state:
    st.session_state.mode = None
if "user_input" not in st.session_state:
    st.session_state.user_input = ""
if "show_answer" not in st.session_state:
    st.session_state.show_answer = False
if "generated_answer" not in st.session_state:
    st.session_state.generated_answer = ""
if "is_loading" not in st.session_state:
    st.session_state.is_loading = False

st.title("RAG-—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π")

if st.session_state.mode is None:
    st.subheader("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ")
    col1, col2 = st.columns(2)

    with col1:
        if st.button("–ù–∞–π—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å –º–∞—Ç—Ä–∏—Ü—ã 2x2",
                     key="matrix_determinant_2x2_button",
                     use_container_width=True):
            st.session_state.mode = "matrix_determinant_2x2"
            st.rerun()
    with col2:
        if st.button("–°–≤–æ–π –∑–∞–ø—Ä–æ—Å", key="custom_request_button", use_container_width=True):
            st.session_state.mode = "custom_request"
            st.rerun()

    uploaded_files = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã (—Ñ–æ—Ä–º–∞—Ç .md)", type=["md"], accept_multiple_files=True)
    if uploaded_files:
        for uploaded_file in uploaded_files:
            with open(os.path.join("data", uploaded_file.name), "wb") as f:
                f.write(uploaded_file.getbuffer())
            st.success(f"–§–∞–π–ª {uploaded_file.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")

elif st.session_state.mode == "matrix_determinant_2x2":
    st.subheader("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è –º–∞—Ç—Ä–∏—Ü—ã 2x2")
    st.write("–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")

    if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞", key="back_button_matrix"):
        st.session_state.mode = None
        st.rerun()

elif st.session_state.mode == "custom_request":
    st.write("–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.")

    st.session_state.user_input = st.text_area(
        "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç –Ω–∏–∂–µ",
        value=st.session_state.user_input,
        height=300
    )

    if st.session_state.is_loading:
        st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞...")

    is_disabled = st.session_state.is_loading

    if st.button("–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç", type="primary", key="generate_answer_button", disabled=is_disabled):
        if st.session_state.user_input:
            st.session_state.show_answer = False
            st.session_state.is_loading = True
            st.rerun()

    if st.session_state.is_loading and not st.session_state.show_answer:
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
            try:
                answer = get_response(st.session_state.user_input)
                st.session_state.show_answer = True
                st.session_state.generated_answer = answer
            except Exception as error:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {error}")
            finally:
                st.session_state.is_loading = False
                st.rerun()

    if st.session_state.show_answer:
        st.markdown("### **–û—Ç–≤–µ—Ç:**")
        st.markdown(f"{st.session_state.generated_answer}")

    if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞", key="back_button_request"):
        st.session_state.mode = None
        st.session_state.show_answer = False
        st.session_state.user_input = ""
        st.session_state.generated_answer = ""
        st.rerun()